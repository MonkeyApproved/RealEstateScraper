{"version":3,"sources":["table/tableHelper.tsx","table/PropertiesTable.tsx","tabs/Properties.tsx","requests/data_manager.ts","table/LoadConfigTable.tsx","tabs/LoadConfig.tsx","tabs/AddLoadConfig.tsx","table/DataLoadsTable.tsx","tabs/DataLoads.tsx","requests/xe_properties.ts","tabs/Details.tsx","App.tsx","index.tsx","tabs/Tabs.module.css"],"names":["renderDate","value","datetime","Date","Intl","DateTimeFormat","month","day","hour","minute","hour12","format","PropertiesTable","propertyList","settings","setSettings","navigate","useNavigate","dataSource","pagination","pageSize","total","count","simple","onRow","record","onClick","xe_id","onRowClick","onChange","filters","sorter","Array","isArray","page_number","current","page_size","ordering","columnKey","order","limit","offset","filter","title","dataIndex","render","bathrooms","bedrooms","PropertiesTab","props","className","styles","content","HOST","geo_location_ids","a","axios","get","config","Object","keys","key","undefined","post","LoadConfigTable","loadConfig","HomeOutlined","style","paddingLeft","AppstoreOutlined","LoadConfigTab","useState","setLoadConfig","useEffect","getLoadConfig","then","response","data","results","catch","error","message","AddLoadConfigTab","Form","useForm","form","labelCol","span","wrapperCol","name","onFinish","values","postLoadConfig","info","statusText","status","initialValues","frequency","maximum_price","Item","label","rules","required","placeholder","Group","Button","type","htmlType","resetFields","DataLoadsTable","dataLoad","CheckCircleOutlined","CloseCircleOutlined","DataLoadsTab","setDataLoad","getDataLoads","DetailsTab","params","useParams","xeResult","setXeResult","getDetails","propertyId","roomsTitle","BuildOutlined","priceTitle","EuroCircleOutlined","descriptionTitle","ReadOutlined","ownerTitle","UserOutlined","buildingTitle","handleCancel","top","width","visible","footer","onCancel","orientation","justify","align","direction","height","details","area","property_type","construction_year","price_total","size_sqm","price_sqm","owner","company_title","email","active_ads","paddingTop","description","href","xe_result","url","target","rel","imageGallery","images","map","image","src","small","alt","long","location","longitude","lat","latitude","get_maps_url","Header","Layout","Content","Footer","App","properties","setProperties","tableSettings","setTableSettings","getXeResult","theme","mode","defaultSelectedKeys","icon","MailOutlined","padding","path","element","textAlign","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.a66091b9.chunk.js","sourcesContent":["export function renderDate(value: string) {\n  const datetime = new Date(value);\n  return Intl.DateTimeFormat('en', {\n    month: 'short',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n    hour12: true,\n  }).format(datetime);\n}\n","import { Table, TablePaginationConfig } from 'antd';\nimport Column from 'antd/lib/table/Column';\nimport { FilterValue, SorterResult } from 'antd/lib/table/interface';\nimport { useNavigate } from 'react-router-dom';\nimport { Details, XeResult } from '../requests/xe_properties';\nimport { renderDate } from './tableHelper';\n\nexport interface PropertyTableSettings {\n  count: number;\n  limit: number;\n  offset: number;\n  ordering: string;\n  filter: string;\n}\n\nexport interface PropertiesTableProps {\n  propertyList: XeResult[];\n  settings: PropertyTableSettings;\n  setSettings: (value: PropertyTableSettings) => void;\n}\n\nexport default function PropertiesTable({\n  propertyList,\n  settings,\n  setSettings,\n}: PropertiesTableProps) {\n  const navigate = useNavigate();\n\n  const renderRooms = (value: Details) => {\n    return <span>{`${value.bathrooms || 0} bath, ${value.bedrooms || 0} bed`}</span>;\n  };\n\n  const onRowClick = (record: XeResult) => {\n    navigate(`/details/${record.xe_id}`);\n  };\n\n  const tableChange = (\n    pagination: TablePaginationConfig,\n    filters: Record<string, FilterValue | null>,\n    sorter: SorterResult<XeResult> | SorterResult<XeResult>[],\n  ) => {\n    if (Array.isArray(sorter)) {\n      sorter = sorter[0];\n    }\n    const page_number = (pagination.current || 1) - 1;\n    const page_size = pagination.pageSize || 20;\n    let ordering = '';\n    if (sorter.columnKey && sorter.order) {\n      ordering = `&ordering=${sorter.order === 'ascend' ? '' : '-'}${sorter.columnKey}`;\n    }\n    setSettings({\n      count: settings.count,\n      limit: page_size,\n      offset: page_number * page_size,\n      ordering: ordering,\n      filter: '',\n    });\n  };\n\n  return (\n    <Table\n      dataSource={propertyList}\n      pagination={{ pageSize: 20, total: settings.count, simple: true }}\n      onRow={(record) => {\n        return {\n          onClick: () => onRowClick(record),\n        };\n      }}\n      onChange={tableChange}\n    >\n      <Column title=\"Area\" dataIndex={['details', 'area']} key=\"area\" />\n      <Column title=\"Price\" dataIndex={['details', 'price_total']} key=\"price_total\" />\n      <Column title=\"Size\" dataIndex={['details', 'size_sqm']} key=\"size_sqm\" />\n      <Column title=\"Year\" dataIndex={['details', 'construction_year']} key=\"year\" />\n      <Column title=\"Owner\" dataIndex=\"owner\" key=\"owner\" />\n      <Column title=\"Rooms\" dataIndex=\"details\" key=\"details\" render={renderRooms} />\n      <Column\n        title=\"First parsed\"\n        dataIndex=\"first_parsed_on\"\n        key=\"first_parsed_on\"\n        render={renderDate}\n      />\n      <Column\n        title=\"Last parsed\"\n        dataIndex=\"last_parsed_on\"\n        key=\"last_parsed_on\"\n        render={renderDate}\n        sorter={true}\n      />\n    </Table>\n  );\n}\n","import styles from './Tabs.module.css';\nimport PropertiesTable, { PropertiesTableProps } from '../table/PropertiesTable';\n\nexport default function PropertiesTab(props: PropertiesTableProps) {\n  return (\n    <div className={styles.content}>\n      <PropertiesTable\n        propertyList={props.propertyList}\n        settings={props.settings}\n        setSettings={props.setSettings}\n      />\n    </div>\n  );\n}\n","import axios, { AxiosResponse } from 'axios';\nimport { Pagination } from './helper';\n\nconst HOST = 'http://localhost:8001/manager';\n\nexport const geo_location_ids: { [name: string]: string } = {\n  'ChIJ8UNwBh-9oRQR3Y1mdkU1Nic': 'Athens',\n  'aj5k2hs-as3dl3k': 'Corfu',\n};\n\nexport interface LoadConfig {\n  id: number;\n  config_name: string;\n  frequency: number;\n  item_type: string;\n  geo_place_id: string;\n  maximum_price: number | undefined;\n  minimum_construction_year: number | undefined;\n  minimum_size: number | undefined;\n  [key: string]: number | string | undefined | null;\n}\n\nexport interface DataLoad {\n  id: string;\n  created_on: string;\n  url: string;\n  count_total: string;\n  count_new: string;\n  completed: boolean;\n  load_config: LoadConfig;\n}\n\nexport async function getLoadConfig(): Promise<AxiosResponse<Pagination<LoadConfig>>> {\n  return axios.get(`${HOST}/load_config/`);\n}\n\nexport async function postLoadConfig(config: Omit<LoadConfig, 'id'>): Promise<AxiosResponse> {\n  for (const key of Object.keys(config)) {\n    if (config[key] === undefined) {\n      config[key] = null;\n    }\n  }\n  return axios.post(`${HOST}/load_config/`, config);\n}\n\nexport async function getDataLoads(): Promise<AxiosResponse<Pagination<DataLoad>>> {\n  return axios.get(`${HOST}/data_loads/`);\n}\n","import { AppstoreOutlined, HomeOutlined } from '@ant-design/icons';\nimport { Table } from 'antd';\nimport Column from 'antd/lib/table/Column';\nimport { geo_location_ids, LoadConfig } from '../requests/data_manager';\n\nexport interface LoadConfigTableProps {\n  loadConfig: LoadConfig[];\n}\n\nexport default function LoadConfigTable({ loadConfig }: LoadConfigTableProps) {\n  const renderType = (value: string) => {\n    if (value === 're_residence') {\n      return (\n        <>\n          <HomeOutlined />\n          <span style={{ paddingLeft: 10 }}>Residence</span>\n        </>\n      );\n    }\n    return (\n      <>\n        <AppstoreOutlined />\n        <span style={{ paddingLeft: 10 }}>Land</span>\n      </>\n    );\n  };\n\n  const renderFrequency = (value: number) => {\n    if (value === 1) {\n      return <span>Hourly</span>;\n    } else if (value === 24) {\n      return <span>Daily</span>;\n    } else if (value === 24 * 7) {\n      return <span>Weekly</span>;\n    }\n    return <span>{`every ${value}h`}</span>;\n  };\n\n  const renderLocation = (value: string) => {\n    if (geo_location_ids[value]) {\n      return <span>{geo_location_ids[value]}</span>;\n    }\n    return <span>unknown</span>;\n  };\n\n  return (\n    <Table dataSource={loadConfig}>\n      <Column title=\"Name\" dataIndex=\"config_name\" key=\"config_name\" />\n      <Column title=\"Frequency\" dataIndex=\"frequency\" key=\"frequency\" render={renderFrequency} />\n      <Column\n        title=\"Location\"\n        dataIndex=\"geo_place_id\"\n        key=\"geo_place_id\"\n        render={renderLocation}\n      />\n      <Column title=\"Type\" dataIndex=\"item_type\" key=\"item_type\" render={renderType} />\n    </Table>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport styles from './Tabs.module.css';\nimport LoadConfigTable from '../table/LoadConfigTable';\nimport { getLoadConfig, LoadConfig } from '../requests/data_manager';\nimport { message } from 'antd';\n\nexport default function LoadConfigTab() {\n  const [loadConfig, setLoadConfig] = useState<LoadConfig[]>([]);\n\n  useEffect(() => {\n    getLoadConfig()\n      .then((response) => {\n        setLoadConfig(response.data.results);\n      })\n      .catch((error) => {\n        message.error(`Failed to get load_config: ${error}`);\n      });\n  }, []);\n\n  return (\n    <div className={styles.content}>\n      <LoadConfigTable loadConfig={loadConfig} />\n    </div>\n  );\n}\n","import styles from './Tabs.module.css';\nimport { Button, Form, Input, InputNumber, message, Radio } from 'antd';\nimport { LoadConfig, postLoadConfig } from '../requests/data_manager';\n\nexport default function AddLoadConfigTab() {\n  const [form] = Form.useForm();\n\n  const layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n  };\n\n  const onSubmit = (values: Omit<LoadConfig, 'id'>) => {\n    postLoadConfig(values)\n      .then((response) => {\n        message.info(`New config added: ${response.statusText} (${response.status})`);\n      })\n      .catch((error) => {\n        message.error(`Failed to get load_config: ${error}`);\n      });\n  };\n\n  const onReset = () => {\n    form.resetFields();\n  };\n\n  return (\n    <div className={styles.content}>\n      <Form\n        {...layout}\n        form={form}\n        name=\"control-hooks\"\n        onFinish={onSubmit}\n        initialValues={{ frequency: 24, maximum_price: 200000 }}\n      >\n        <Form.Item name=\"config_name\" label=\"Config name\" rules={[{ required: true }]}>\n          <Input placeholder=\"give this configuration a meaningful name\" />\n        </Form.Item>\n        <Form.Item name=\"frequency\" label=\"Frequency\" rules={[{ required: true }]}>\n          <Radio.Group>\n            <Radio.Button value={1}>Hourly</Radio.Button>\n            <Radio.Button value={24}>Daily</Radio.Button>\n            <Radio.Button value={24 * 7}>Weekly</Radio.Button>\n          </Radio.Group>\n        </Form.Item>\n        <Form.Item name=\"item_type\" label=\"Type\" rules={[{ required: true }]}>\n          <Radio.Group>\n            <Radio.Button value=\"re_residence\">Apartment</Radio.Button>\n            <Radio.Button value=\"re_land\">Land</Radio.Button>\n          </Radio.Group>\n        </Form.Item>\n        <Form.Item name=\"geo_place_id\" label=\"Location\" rules={[{ required: true }]}>\n          <Radio.Group>\n            <Radio.Button value=\"ChIJ8UNwBh-9oRQR3Y1mdkU1Nic\">Athens</Radio.Button>\n            <Radio.Button value=\"ChIJ11DRvwBcWxMREJS54iy9AAQ\">Corfu</Radio.Button>\n          </Radio.Group>\n        </Form.Item>\n        <Form.Item name=\"maximum_price\" label=\"Max price\">\n          <InputNumber />\n        </Form.Item>\n        <Form.Item name=\"minimum_construction_year\" label=\"Min constr. year\">\n          <InputNumber />\n        </Form.Item>\n        <Form.Item name=\"minimum_size\" label=\"Min size\">\n          <InputNumber />\n        </Form.Item>\n        <Form.Item wrapperCol={{ offset: 4, span: 16 }}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Add\n          </Button>\n          <Button htmlType=\"button\" onClick={onReset}>\n            Reset\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n}\n","import { CheckCircleOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport { Table } from 'antd';\nimport Column from 'antd/lib/table/Column';\nimport { DataLoad } from '../requests/data_manager';\nimport { renderDate } from './tableHelper';\n\nexport interface DataLoadTableProps {\n  dataLoad: DataLoad[];\n}\n\nexport default function DataLoadsTable({ dataLoad }: DataLoadTableProps) {\n  const renderCompleted = (value: boolean) => {\n    return value ? <CheckCircleOutlined /> : <CloseCircleOutlined />;\n  };\n\n  return (\n    <Table dataSource={dataLoad}>\n      <Column title=\"\" dataIndex=\"completed\" key=\"config_name\" render={renderCompleted} />\n      <Column title=\"Config\" dataIndex={['load_config', 'config_name']} key=\"config_name\" />\n      <Column title=\"Loaded on\" dataIndex=\"created_on\" key=\"config_name\" render={renderDate} />\n      <Column title=\"Total\" dataIndex=\"count_total\" key=\"frequency\" />\n      <Column title=\"New\" dataIndex=\"count_new\" key=\"frequency\" />\n    </Table>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport styles from './Tabs.module.css';\nimport { getDataLoads, DataLoad } from '../requests/data_manager';\nimport { message } from 'antd';\nimport DataLoadsTable from '../table/DataLoadsTable';\n\nexport default function DataLoadsTab() {\n  const [dataLoad, setDataLoad] = useState<DataLoad[]>([]);\n\n  useEffect(() => {\n    getDataLoads()\n      .then((response) => {\n        setDataLoad(response.data.results);\n      })\n      .catch((error) => {\n        message.error(`Failed to get load_config: ${error}`);\n      });\n  }, []);\n\n  return (\n    <div className={styles.content}>\n      <DataLoadsTable dataLoad={dataLoad} />\n    </div>\n  );\n}\n","import axios, { AxiosResponse } from 'axios';\nimport { PropertyTableSettings } from '../table/PropertiesTable';\nimport { Pagination } from './helper';\n\nconst HOST = 'http://localhost:8001/properties';\n\nexport interface XeResult {\n  id: number;\n  xe_id: number;\n  first_parsed_on: string;\n  last_parsed_on: string;\n  url: string;\n  created: string;\n  modified: string;\n  owner: string;\n  location: Location;\n  details: Details;\n}\n\nexport interface Details {\n  area: string;\n  bathrooms: number;\n  bedrooms: number;\n  commercial: boolean;\n  construction_year: number;\n  description: string;\n  id: number;\n  item_type: string;\n  price_sqm: number;\n  price_total: number;\n  property_type: string;\n  size_sqm: number;\n}\n\nexport interface Location {\n  id: number;\n  latitude: string;\n  longitude: string;\n}\n\nexport interface Owner {\n  id: number;\n  account_id: number;\n  email: string;\n  address: string;\n  ref_id: string;\n  company_title: string;\n  active_ads: number;\n}\n\nexport interface Metrics {\n  id: number;\n  date: string;\n  xe_id: number;\n  saves: number;\n  visits: number;\n}\n\nexport interface Image {\n  xe_id: number;\n  small: string;\n  medium: string;\n  big: string;\n}\n\nexport interface GetDetails {\n  xe_result: XeResult[];\n  details: Details[];\n  location: Location[];\n  owner: Owner[];\n  metrics: Metrics[];\n  images: Image[];\n}\n\nexport async function getXeResult({\n  offset,\n  limit,\n  ordering,\n}: PropertyTableSettings): Promise<AxiosResponse<Pagination<XeResult>>> {\n  const pagination = `?limit=${limit}&offset=${offset}`;\n  return axios.get(`${HOST}/xe_result/${pagination}${ordering}`);\n}\n\nexport async function getDetails(xe_id: string): Promise<AxiosResponse<GetDetails>> {\n  return axios.get(`${HOST}/details/${xe_id}`);\n}\n","import {\n  BuildOutlined,\n  EuroCircleOutlined,\n  HomeOutlined,\n  ReadOutlined,\n  UserOutlined,\n} from '@ant-design/icons';\nimport { Button, Card, Divider, message, Modal, Row, Space } from 'antd';\nimport { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { GetDetails, getDetails } from '../requests/xe_properties';\nimport { PropertiesTableProps } from '../table/PropertiesTable';\nimport PropertiesTab from './Properties';\nimport styles from './Tabs.module.css';\n\nexport default function DetailsTab(props: PropertiesTableProps) {\n  const params = useParams();\n  const navigate = useNavigate();\n  const [xeResult, setXeResult] = useState<GetDetails>();\n\n  useEffect(() => {\n    getDetails(params.propertyId || '')\n      .then((response) => {\n        setXeResult(response.data);\n      })\n      .catch((error) => {\n        message.error(`Failed to get load_config: ${error}`);\n      });\n  }, []);\n\n  const get_maps_url = () => {\n    const long = xeResult?.location[0].longitude || '0';\n    const lat = xeResult?.location[0].latitude || '0';\n    return `https://maps.google.com/maps?q=${lat}, ${long}&z=15&output=embed`;\n  };\n\n  const getImages = () => {\n    return xeResult?.images.map((image) => {\n      return <img src={image.small} key={image.small} alt={`property_${image.xe_id}`} />;\n    });\n  };\n\n  const roomsTitle = (\n    <>\n      <BuildOutlined />\n      <span> Rooms</span>\n    </>\n  );\n\n  const priceTitle = (\n    <>\n      <EuroCircleOutlined />\n      <span> Price</span>\n    </>\n  );\n\n  const descriptionTitle = (\n    <>\n      <ReadOutlined />\n      <span> Description</span>\n    </>\n  );\n\n  const ownerTitle = (\n    <>\n      <UserOutlined />\n      <span> Contact</span>\n    </>\n  );\n\n  const buildingTitle = (\n    <>\n      <HomeOutlined />\n      <span> Building</span>\n    </>\n  );\n\n  const handleCancel = () => {\n    navigate('/properties');\n  };\n\n  return (\n    <>\n      <PropertiesTab\n        propertyList={props.propertyList}\n        settings={props.settings}\n        setSettings={props.setSettings}\n      />\n      <Modal\n        style={{ top: 20 }}\n        width={'90vw'}\n        visible={true}\n        className={styles.content}\n        footer={\n          <Button key=\"back\" onClick={handleCancel}>\n            Back\n          </Button>\n        }\n        onCancel={handleCancel}\n      >\n        <Divider orientation=\"center\">DETAILS</Divider>\n        <Row justify=\"center\" align=\"top\">\n          <Space direction=\"horizontal\" align=\"end\">\n            <Card title={buildingTitle} style={{ width: 300, height: '100%' }}>\n              <p>Area: {xeResult?.details[0].area}</p>\n              <p>Type: {xeResult?.details[0].property_type}</p>\n              <p>Year: {xeResult?.details[0].construction_year}</p>\n            </Card>\n            <Card title={roomsTitle} style={{ width: 300, height: '100%' }}>\n              <p>{xeResult?.details[0].bathrooms} bathrooms</p>\n              <p>{xeResult?.details[0].bedrooms} bedrooms</p>\n            </Card>\n            <Card title={priceTitle} style={{ width: 300, height: '100%' }}>\n              <p>Total: {xeResult?.details[0].price_total}€</p>\n              <p>Size: {xeResult?.details[0].size_sqm}m^2</p>\n              <p>Relative: {xeResult?.details[0].price_sqm}€/m^2</p>\n            </Card>\n            <Card title={ownerTitle} style={{ width: 300, height: '100%' }}>\n              <p>Company: {xeResult?.owner[0].company_title}</p>\n              <p>Email: {xeResult?.owner[0].email}</p>\n              <p>#Adds: {xeResult?.owner[0].active_ads}</p>\n            </Card>\n          </Space>\n        </Row>\n        <Row justify=\"center\" align=\"top\" style={{ paddingTop: 10 }}>\n          <Card title={descriptionTitle} style={{ width: '60%', height: '100%' }}>\n            <p>{xeResult?.details[0].description}</p>\n            <a href={xeResult?.xe_result[0].url} target=\"_blank\" rel=\"noreferrer\">\n              See add on xe.gr\n            </a>\n          </Card>\n        </Row>\n        <Divider orientation=\"center\">IMAGES</Divider>\n        <Row justify=\"center\" align=\"top\" style={{ paddingTop: 10 }}>\n          <div className={styles.imageGallery}>{getImages()}</div>\n        </Row>\n        <Divider orientation=\"center\">MAP</Divider>\n        <iframe className={styles.map} src={get_maps_url()}></iframe>\n      </Modal>\n    </>\n  );\n}\n","import { Layout, Menu, message } from 'antd';\nimport { MailOutlined } from '@ant-design/icons';\nimport { Routes, Route, useNavigate } from 'react-router-dom';\nimport PropertiesTab from './tabs/Properties';\nimport LoadConfigTab from './tabs/LoadConfig';\nimport AddLoadConfigTab from './tabs/AddLoadConfig';\nimport DataLoadsTab from './tabs/DataLoads';\nimport DetailsTab from './tabs/Details';\nimport { getXeResult, XeResult } from './requests/xe_properties';\nimport { useEffect, useState } from 'react';\nimport { PropertyTableSettings } from './table/PropertiesTable';\nconst { Header, Content, Footer } = Layout;\n\nexport default function App() {\n  const navigate = useNavigate();\n  const [properties, setProperties] = useState<XeResult[]>([]);\n  const [tableSettings, setTableSettings] = useState<PropertyTableSettings>({\n    count: 0,\n    limit: 20,\n    offset: 0,\n    ordering: '',\n    filter: '',\n  });\n\n  useEffect(() => {\n    getXeResult(tableSettings)\n      .then((response) => {\n        setProperties(response.data.results);\n        if (response.data.count !== tableSettings.count) {\n          setTableSettings({ ...tableSettings, count: response.data.count });\n        }\n      })\n      .catch((error) => {\n        message.error(`Failed to GET Xe Results: ${error}`);\n      });\n  }, [tableSettings]);\n\n  return (\n    <Layout className=\"layout\">\n      <Header>\n        <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['properties']}>\n          <Menu.Item\n            key=\"properties\"\n            icon={<MailOutlined />}\n            onClick={() => navigate('/properties')}\n          >\n            <span>Properties</span>\n          </Menu.Item>\n          <Menu.Item key=\"config\" onClick={() => navigate('/config')}>\n            <span>Config</span>\n          </Menu.Item>\n          <Menu.Item key=\"add_config\" onClick={() => navigate('/add_config')}>\n            <span>Add</span>\n          </Menu.Item>\n          <Menu.Item key=\"loads\" onClick={() => navigate('/loads')}>\n            <span>Loads</span>\n          </Menu.Item>\n        </Menu>\n      </Header>\n      <Content style={{ padding: '0 50px' }}>\n        <div className=\"site-layout-content\">\n          <Routes>\n            <Route\n              path=\"/\"\n              element={\n                <PropertiesTab\n                  propertyList={properties}\n                  settings={tableSettings}\n                  setSettings={setTableSettings}\n                />\n              }\n            />\n            <Route\n              path=\"/properties\"\n              element={\n                <PropertiesTab\n                  propertyList={properties}\n                  settings={tableSettings}\n                  setSettings={setTableSettings}\n                />\n              }\n            />\n            <Route path=\"/config\" element={<LoadConfigTab />} />\n            <Route path=\"/add_config\" element={<AddLoadConfigTab />} />\n            <Route path=\"/loads\" element={<DataLoadsTab />} />\n            <Route\n              path=\"/details/:propertyId\"\n              element={\n                <DetailsTab\n                  propertyList={properties}\n                  settings={tableSettings}\n                  setSettings={setTableSettings}\n                />\n              }\n            />\n          </Routes>\n        </div>\n      </Content>\n      <Footer style={{ textAlign: 'center' }}>Real Estate Scarper by MonkeyApproved</Footer>\n    </Layout>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Tabs_content__2d6p_\",\"map\":\"Tabs_map__2H_fd\",\"details\":\"Tabs_details__3Tv4z\",\"imageGallery\":\"Tabs_imageGallery__2i2VR\"};"],"sourceRoot":""}